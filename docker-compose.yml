version: '3.8'

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:5001
      - NEXT_PUBLIC_AUTH_URL=http://auth-service:4000
    depends_on:
      - backend
      - auth-service

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - DATABASE_URL=postgresql://user:password@postgres:5432/footprint_db
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:4000
    depends_on:
      - postgres
      - redis
      - auth-service

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/auth_db
      - JWT_SECRET=92f50bad8e544efeadb7df856fe4dc27d0b99013730b6afefc6b2ec78a884effa5d4e2452816c5153ca07fd712fb4f0eead24e415897a14e4eecd1c95a6959ac
      - JWT_EXPIRES_IN=24h
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_MULTIPLE_DATABASES=footprint_db,auth_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data: 